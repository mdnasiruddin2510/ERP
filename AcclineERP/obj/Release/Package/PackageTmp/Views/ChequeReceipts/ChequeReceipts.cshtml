@model App.Domain.ViewModel.ChequeReceiptVM
@{
    ViewBag.Title = "Cheque Receipt";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/App_Themes/Theme1/plugins/datatables/jquery.dataTables.min.css" rel="stylesheet" type="text/css" />
<link href="~/App_Themes/Theme1/plugins/bootstrap-daterangepicker/daterangepicker.css" rel="stylesheet">
<link href="~/App_Themes/Theme1/plugins/datatables/jquery.dataTables.min.css" rel="stylesheet" type="text/css" />
<link href="~/App_Themes/Theme1/plugins/select2/select2.css" rel="stylesheet" type="text/css" />
<link href="~/Css/FormDesign.css" rel="stylesheet" />

<style>
    table.dataTable.select tbody tr,
    table.dataTable thead th:first-child {
        cursor: pointer;
        text-align: center;
    }

    .dataTables_scrollBody > table > thead > tr > th[class*="sort"]::after {
        display: none;
    }

    .form-control {
        border: 1px solid #00ffff;
    }

    a#glPro {
        color: darkblue;
    }

    a#GLEntries {
        color: darkblue;
    }

    .required:after {
        content: " *";
        font-weight: bold;
        color: red;
    }

    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    input[type=number] {
        -moz-appearance: textfield;
    }
</style>

<div class="row">
    <div class="col-md-11">
        <div class="panel panel-color panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <text style="text-align:left !important; text-decoration: none;">Money Receipt (Cheque)</text>
                </h3>
            </div>
            <div class="panel-body">
                <div class="input-group form-group col-md-12">
                    <div class="col-md-6" style="text-align:right">
                        <label class="col-md-3"></label>
                        <label class="col-md-7 control-label" style="padding-left:initial; text-align:right">
                            @Html.ActionLink(
                                "Receipt Voucher waiting for Posting",
                                "GetJournalVoucher",
                                "ChequeReceipts",
                                new { pageType = "blankDate" },
                                new { id = "glPro", }
                                )
                        </label>
                        <label class="col-md-1 control-label" style="padding-left:initial; padding-right:initial; text-align:left" id="CountNo">(@ViewBag.GLProvition)</label>
                    </div>
                    <div class="col-md-6" style="text-align:left">
                        <label class="control-label" target="_blank">
                            @Html.ActionLink(
                                "List of Receipt Voucher",
                                "GetGLEntries",
                                "ChequeReceipts",
                                new { Date = "blankDate" },
                                new { id = "GLEntries", }
                                )
                        </label>
                        <label>(@ViewBag.GLEntries)</label>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="col-md-6">
                        <div class="col-md-12" id="ddfBrCode">
                            <label class="col-md-4" for="BrCode">Branch</label>
                            <div class="input-group form-group col-md-8">
                                @Html.DropDownListFor(x => x.BranchCode, (IEnumerable<SelectListItem>)ViewBag.BranchCode, new { @class = "form-control select2" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <label class="col-md-4">Receipt SL</label>
                            <div class="input-group form-group col-md-8">
                                @Html.TextBoxFor(x => x.MRSL, new { @class = "form-control col-md-7 select2", required = "required", disabled = "true" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <label class="col-md-4 required">Receipt No</label>
                            <div class="input-group form-group col-md-8">
                                @Html.TextBoxFor(x => x.ChqReceiptNo, new { @class = "form-control", required = "required" })
                                @Html.HiddenFor(s => s.ChqReceiptId)
                            </div>
                        </div>
                        <div class="col-md-12">
                            <label class="col-md-4" for="tDate">Receipt Date</label>
                            <div class="input-group form-group col-md-8">
                                <input type="text" class="form-control datePage" id="@Html.IdFor(x => x.ChqReceiptDate)" value="@DateTime.Today.ToShortDateString()">
                                <span class="input-group-addon bg-primary b-0 text-white"><i class="ion-calendar"></i></span>
                            </div>
                        </div>
                        @if (ViewBag.MaintJob == true)
                        {
                            <div class="col-md-12">
                                <label class="col-md-4">Job No</label>
                                <div class="col-md-8" style="padding-left:0px">
                                    <div class="col-md-8" style="padding-left:0px">
                                        <div class="col-md-12 input-group form-group">
                                            @Html.DropDownListFor(x => x.JobNo, null, "---- Select ----", new { @class = "form-control select2", @Value = ViewBag.JobNo })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="col-md-12">
                                            <input type="button" class="btn" value="Add Job" id="btnJob" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                        }
                        <div class="col-md-12">
                            <label class="col-md-4 required">Receipt From</label>
                            <div class="input-group form-group col-md-8">
                                @Html.DropDownListFor(x => x.SubCode, (IEnumerable<SelectListItem>)ViewBag.SubCode, "--- Select ---", new { @class = "form-control select2" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <label class="col-md-4 required">MR Against</label>
                            <div class="input-group form-group col-md-8">
                                @Html.DropDownListFor(x => x.MRAgainst, (IEnumerable<SelectListItem>)ViewBag.Accode, new { @class = "form-control select2" })
                            </div>
                        </div>

                        <div class="col-md-12">
                            <label class="col-md-4 required">Cheque No</label>
                            <div class="input-group form-group col-md-8">
                                @Html.TextBoxFor(x => x.ChqNo, new { @class = "form-control", required = "required" })
                                <input type="hidden" id="oldChqNo" />
                            </div>
                        </div>
                        <div class="col-md-12">
                            <label class="col-md-4 required" for="tDate">Cheque Date</label>
                            <div class="input-group form-group col-md-8">
                                <input type="text" class="form-control datePage" id="@Html.IdFor(x => x.ChqDate)" value="@DateTime.Today.ToShortDateString()">
                                <span class="input-group-addon bg-primary b-0 text-white"><i class="ion-calendar"></i></span>

                            </div>
                        </div>
                        <div class="col-md-12">
                            <label class="col-md-4 required">Bank Name</label>
                            <div class="input-group form-group col-md-8">
                                @Html.DropDownListFor(x => x.BankCode, (IEnumerable<SelectListItem>)ViewBag.BankCode, "--- Select ---", new { @class = "form-control select2" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <label class="col-md-4 required">Brnach Name</label>
                            <div class="input-group form-group col-md-8">
                                @Html.TextBoxFor(x => x.BranchName, new { @class = "form-control", required = "required" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <label class="col-md-4 required">Amount</label>
                            <div class="input-group form-group col-md-6">
                                @Html.TextBoxFor(x => x.Amount, new { @class = "form-control", required = "required", @type = "number", @min = "0" })
                            </div>
                        </div>
                        <div class="col-sm-12"><br /></div>
                        <div class="col-md-12">
                            <div class="col-md-4">
                                <label class="col-md-1"></label>
                                <div class="col-md-11 checkbox checkbox-primary">
                                    <input type="checkbox" name="AdjWithBill" id="AdjWithBill" /><label>Adjust With Bill</label>
                                </div>
                            </div>
                            <div class="col-md-8">
                                <input type="button" value="Print" class="btn btn-primary" id="btnPreview" onclick="location.href='@Url.Action("GetMoneyReceiptPdf", "ChequeReceipts")?ReceiptNo=' + $('#ChqReceiptNo').val()" />
                                <input type="button" value="Save" class="btn btn-primary" id="btnSave" style="width:100px;" />
                                <input type="button" value="Update" class="btn btn-primary hidden" id="update" style="width:100px;" />
                                <input type="button" value="Clear" class="btn btn-primary" id="btnClear" style="width:100px;" />
                            </div>
                        </div>

                    </div>
                    <div class="col-md-6">
                        <div class="col-md-12">
                            <label class="col-md-4 required">Cheque Status</label>
                            <div class="input-group form-group col-md-8">
                                <select name="ChqStatus" id="ChqStatus" class="form-control select2">
                                    <option value="Receive">Receive</option>
                                    <option value="Deposit">Deposit</option>
                                    <option value="Encash">Encash</option>
                                    <option value="Dishonour">Dishonour</option>
                                    <option value="Return">Return</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-12 hidden" id="pnlReason">
                            <label class="col-md-4">Reason</label>
                            <div class="input-group form-group col-md-8">
                                @Html.TextBoxFor(x => x.Reason, new { @class = "form-control", required = "required" })
                            </div>
                        </div>
                        <div class="col-md-12" style="">
                            <label class="col-md-4"></label>
                            <div class="checkbox checkbox-primary col-md-6" style="margin-top:0px">
                                @*<input type="checkbox" name="PostDated" class="PostDated" required="required" value="1" id="PostDated" /><label>Post Dated</label>*@
                                <input id="@Html.IdFor(x => x.PostDated)" type="checkbox" name="PostDated" /><label>Post Dated</label>
                            </div>

                        </div>
                        <div class="col-md-12" id="pnlSuggPlaceDate">
                            <label class="col-md-4" for="tDate">Suggested Place Date</label>
                            <div class="input-group form-group col-md-8">
                                <input type="text" class="form-control datePage" id="@Html.IdFor(x => x.SuggPlaceDate)" value="">
                                <span class="input-group-addon bg-primary b-0 text-white"><i class="ion-calendar"></i></span>

                            </div>
                        </div>
                        <div class="col-md-12">
                            <label class="col-md-4">Deposit Bank</label>
                            <div class="input-group form-group col-md-8">
                                @Html.DropDownListFor(x => x.DepositBank, (IEnumerable<SelectListItem>)ViewBag.DepositBank, new { @class = "form-control select2" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <label class="col-md-4" for="DepositDate">Deposit Date</label>
                            <div class="input-group form-group col-md-8">
                                <input type="text" class="form-control datePage" id="@Html.IdFor(x => x.DepositDate)" value="@DateTime.Today.ToShortDateString()">
                                <span class="input-group-addon bg-primary b-0 text-white"><i class="ion-calendar"></i></span>

                            </div>
                        </div>
                        <div class="col-md-12">
                            <label class="col-md-4" for="lblEncashDate">Encash Date</label>
                            <div class="input-group form-group col-md-8">
                                <input type="text" class="form-control datePage" id="@Html.IdFor(x => x.EncashDate)" value="">
                                <span class="input-group-addon bg-primary b-0 text-white"><i class="ion-calendar"></i></span>

                            </div>
                        </div>

                        <div class="col-md-12">
                            <label class="col-md-4">Voucher No</label>
                            <div class="input-group form-group col-md-8">
                                @Html.TextBoxFor(x => x.VchrNo, new { @class = "form-control", required = "required", disabled = "true" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <label class="col-md-4 required">Update By</label>
                            <div class="input-group form-group col-md-8">
                                @Html.DropDownListFor(x => x.UpdateBy, (IEnumerable<SelectListItem>)ViewBag.UpdateBy, new { @class = "form-control select2" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <label class="col-md-4 required" for="UpdateDate">Updated Date</label>
                            <div class="input-group form-group col-md-8">
                                <input type="text" class="form-control datePage" id="@Html.IdFor(x => x.UpdateDate)" value="@DateTime.Today.ToShortDateString()">
                                <span class="input-group-addon bg-primary b-0 text-white"><i class="ion-calendar"></i></span>

                            </div>
                        </div>
                        <div class="col-md-12">
                            <label class="col-md-4">Remarks</label>
                            <div class="input-group form-group col-md-8">
                                @Html.TextAreaFor(x => x.Remarks, new { @class = "form-control", required = "required" })
                            </div>
                        </div>
                        <div class="col-md-12 hidden" id="pnGLPost">
                            <label class="col-md-4">Posted</label>
                            <div class="checkbox checkbox-primary col-md-6" style="margin-top:0px">
                                <input id="@Html.IdFor(x => x.GLPost)" type="checkbox" name="GLPost" /><label></label>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="col-sm-12 col-md-12 hidden" style="margin:10px 10px 10px 10px" id="pnlDT">
                    <div class="row col-sm-12 col-md-12" style="border:1px solid; border-color:#adcceb; width:100%">
                        <div class="row">
                            <div class="col-sm-12 col-md-12" style="padding:1px 18px 1px 18px">
                                <br />
                                <table class="table table-bordered table-responsive" id="ChqMoneyRecptDT" style="width:100%">
                                    <thead>
                                        <tr>
                                            <th width="5%">SL</th>
                                            <th width="10%">Bill&nbsp;No</th>
                                            <th width="5%">Date</th>
                                            <th width="10%">Amount</th>
                                            <th width="5%">
                                                <input type="checkbox" id="chkSelectAll" style="text-align:center" name="select_all">&nbsp; Adjust All
                                                @*<label>Adjust All</label>*@
                                            </th>
                                            <th width="3%">
                                                <input type="checkbox" id="chkPaidAll" style="text-align:center" name="select_all">&nbsp; Paid All
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody id="tbodyId"></tbody>

                                </table>
                                <br />
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

</div>

<div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" id="JobModal" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-color panel-primary">
                        <div class="panel-heading">
                            <h3 class="panel-title">Job Information</h3>

                        </div>
                        <div class="panel-body">
                            <div class="clearfix">
                            </div>
                            <div class="col-md-12">
                                <label class="col-md-3">Job No</label>
                                <div class="input-group form-group col-md-7">
                                    <input type="text" class="form-control" id="nJobNo" name="nJobNo" />
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div>
                                    <div class="pull-right">
                                        <input type="button" id="btnJobOk" value="Save" class="btn btn-primary" />
                                        <input type="button" id="closeJob" value="Close" class="btn btn-primary" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts{

    <script src="/App_Themes/Theme1/plugins/select2/select2.min.js"></script>
    <script src="~/App_Themes/Theme1/plugins/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>

    <script>
        $(document).ready(function () {
            var ispType = '@ViewBag.errMsg';
            if (ispType != '') {
                ispType = '@ViewBag.errMsg';
            }
            if (ispType == "VWP") {
                alert("No Voucher waiting for posting Permission for this User");
            } else if (ispType == "VL") {
                alert("No List Of Receive vouchers Permission for this User");
            } else if (ispType == "NF") {
                alert("Receipt no doesn't found!");
            }

            function select2Focus() {
                var select2 = $(this).data('select2');
                setTimeout(function () {
                    if (!select2.opened()) {
                        select2.open();
                    }
                }, 0);
            }

            $("input:text:visible:first").focus();
            //$("#update").hide();
            $("#SubCode").select2().one('select2-focus', select2Focus).on("select2-blur", function () { $(this).one('select2-focus', select2Focus) });
            $("#BankCode").select2().one('select2-focus', select2Focus).on("select2-blur", function () { $(this).one('select2-focus', select2Focus) });
            $("#DepositBank").select2().one('select2-focus', select2Focus).on("select2-blur", function () { $(this).one('select2-focus', select2Focus) });
            $("#JobNo").select2().one('select2-focus', select2Focus).on("select2-blur", function () { $(this).one('select2-focus', select2Focus) });

            $("#pnlSuggPlaceDate").hide();

            var loadInfo = {
                MRSL: "",
                BranchCode: "",
                ChqReceiptNo: "",
                ChqReceiptDate: "",
                MRAgainst: "",
                SubCode: "",
                ChqNo: "",
                ChqDate: "",
                BankCode: "",
                BranchName: "",
                DepositBank: "",
                DepositDate: "",
                Amount: "",
                EncashDate: "",
                Remarks: "",
                VchrNo: "",
                PostDated: "",
                SuggPlaceDate: "",
                GLPost: "",
                ChqStatus: "",
                UpdateBy: "",
                UpdateDate: "",
                Reason: "",
                AdjWithBill: "",
                oldChqNo: "",
                JobNo: "",
            };

            function setOrder() {
                loadInfo.ChqReceiptId = $("#ChqReceiptId").val();
                loadInfo.BranchCode = $("#BranchCode").val();
                loadInfo.MRSL = $("#MRSL").val();
                loadInfo.ChqReceiptNo = $("#ChqReceiptNo").val();
                loadInfo.ChqReceiptDate = $("#ChqReceiptDate").val();
                loadInfo.MRAgainst = $("#MRAgainst").val();
                loadInfo.SubCode = $("#SubCode").val();
                loadInfo.ChqNo = $("#ChqNo").val();
                loadInfo.ChqDate = $("#ChqDate").val();
                loadInfo.BankCode = $("#BankCode").val();
                loadInfo.BranchName = $("#BranchName").val();
                loadInfo.DepositBank = $("#DepositBank").val();
                loadInfo.DepositDate = $("#DepositDate").val();
                loadInfo.Amount = parseFloat($("#Amount").val()).toFixed(2).replace(".", ",");
                loadInfo.EncashDate = $("#EncashDate").val();
                loadInfo.Remarks = $("#Remarks").val();
                loadInfo.VchrNo = $("#VchrNo").val();
                loadInfo.ChqStatus = $("#ChqStatus").val();
                loadInfo.UpdateBy = $("#UpdateBy").val();
                loadInfo.UpdateDate = $("#UpdateDate").val();
                loadInfo.Reason = $("#Reason").val();
                loadInfo.oldChqNo = $("#oldChqNo").val();
                loadInfo.AdjWithBill = $("#AdjWithBill").prop("checked");
                loadInfo.JobNo = $("#JobNo").val();

                var PostDated = $("#PostDated").prop("checked");
                if (PostDated == true) {
                    loadInfo.PostDated = true;
                    loadInfo.SuggPlaceDate = $("#SuggPlaceDate").val();
                }
                var GLPost = $("#GLPost").prop("checked");
                if (GLPost == true) {
                    loadInfo.GLPost = true
                }
            }

            $(document).on("click", "#btnJob", function () {
                $("#JobModal").modal("show");
            });
            $(document).on("click", "#closeJob", function (e) {
                e.preventDefault();
                $('#JobModal').modal('hide');
            });

            $(document).on("click", "#btnJobOk", function (e) {
                if ($("#nJobNo").val() != "") {
                    $.ajax({
                        url: '@Url.Action("LoadandSaveJob", "Sales")',
                        contentType: "application/json;charset=utf-8",
                        data: {
                            nJobNo: $("#nJobNo").val()
                        },
                        type: 'GET',
                        dataType: 'json',
                        success: function (data) {
                            $('#JobNo').empty();
                            //data.insertBefore('<option>', { Value: "", text: "--- Select ---" });
                            $.each(data, function (index, value) {
                                $('#JobNo').append($('<option>',
                                    {
                                        value: value.Value,
                                        text: value.Text
                                    })).select2();
                            });
                            $('#JobModal').modal('hide');
                            $("#nJobNo").val("");
                        }
                    });
                }
                else {
                    alert("Job No is required.");
                    return;
                }

            })

            $(document).on("change", "#ChqStatus", function (e) {
                setOrder();
                $("label[for='lblEncashDate']").text("Encash Date");
                if (loadInfo.ChqStatus == "Receive") {
                    $('#pnlReason').attr("class", "col-md-12 hidden");
                }
                else if (loadInfo.ChqStatus == "Deposit") {
                    $('#pnlReason').attr("class", "col-md-12 hidden");
                }
                else if (loadInfo.ChqStatus == "Encash") {
                    $('#pnlReason').attr("class", "col-md-12 hidden");
                }
                else if (loadInfo.ChqStatus == "Dishonour") {
                    $('#pnlReason').attr("class", "col-md-12");
                    $("label[for='lblEncashDate']").text("Dishonored Date");
                }
                else if (loadInfo.ChqStatus == "Return") {
                    $('#pnlReason').attr("class", "col-md-12");
                }
            })

            $('#PostDated').click(function () {
                var credit = $("#PostDated").prop("checked");
                if (credit == true) {
                    $("#pnlSuggPlaceDate").show();
                    $("#SuggPlaceDate").val("@DateTime.Today.ToShortDateString()");
                } else {
                    $("#pnlSuggPlaceDate").hide();
                    $("#SuggPlaceDate").val("");
                }
            });

            $('#AdjWithBill').click(function () {
                setOrder();
                var validate = validateOnAdj(loadInfo);
                if (validate != "") {
                    alert(validate);
                    $("#AdjWithBill").prop("checked", false);
                    return;
                }

                var credit = $("#AdjWithBill").prop("checked");
                if (credit == true) {
                    $('#pnlDT').attr("class", "col-sm-12 col-md-12");
                    LoadDT();

                } else {
                    $('#pnlDT').attr("class", "col-sm-12 col-md-12 hidden");
                }
            });

            // Handle click on "Select all" control
            $('#chkSelectAll').on('click', function () {
                // Get all rows with search applied
                var table = $('#ChqMoneyRecptDT').DataTable();
                var rows = table.rows({ 'search': 'applied' }).column(4).nodes();
                // Check/uncheck checkboxes for all rows in the table
                $('input[type="checkbox"]', rows).prop('checked', this.checked);
            });


            $('#chkPaidAll').on('click', function () {
                // Get all rows with search applied
                var table = $('#ChqMoneyRecptDT').DataTable();
                var rows = table.rows({ 'search': 'applied' }).column(5).nodes();
                // Check/uncheck checkboxes for all rows in the table
                $('input[type="checkbox"]', rows).prop('checked', this.checked);
            });

            function validateOnAdj(validOrderAdj) {

                if (validOrderAdj.SubCode == "") {
                    return "Receipt From is required";
                }
                if (validOrderAdj.MRAgainst == "") {
                    return "MR Against is Required";
                }
                if (validOrderAdj.Amount == "" || validOrderAdj.Amount <= 0) {
                    return "Amount is required";
                }
                return "";
            }

            $.ajax({
                url: '@Url.Action("GetReceiptNo", "ChequeReceipts")',
                contentType: "application/json;charset=utf-8",
                data: { branchCode: $("#BranchCode").val() },
                type: 'GET',
                dataType: 'json',
                success: function (datas) {
                    $("#MRSL").val(datas);
                }
            });

            $.ajax({
                url: '@Url.Action("GetNewVoucherNo", "CashReceipt")',
                contentType: "application/json;charset=utf-8",
                data: { VType: 'BR' },
                type: 'GET',
                dataType: 'json',
                success: function (datas) {
                    $("#VchrNo").val(datas);
                }
            });

            var AdjBills = [];
            $(document).on("click", "#btnSave", function () {
                $("#btnSave").prop("disabled", false);

                setOrder();
                var validate = validateOnSave(loadInfo);
                if (validate != undefined) {
                    alert(validate);
                    return;
                }

                var dtable = $('#ChqMoneyRecptDT').dataTable();
                //var rowCount = $('#ChqMoneyRecptDT >tbody >tr').length;

                var rows = $(dtable.$('input[type="checkbox"]').map(function () {
                    return $(this).closest('tr');
                }));


                rows.each(function (i, value) {
                    if (i % 2 == 1) {
                        var item = { BillNo: "", BillAmount: "", IsPaid_mre: 0, IsAdjust_mre: 0 }
                        var rowId = value[0].cells[1].innerText;
                        item.BillAmount = value[0].cells[3].innerText;
                        item.BillNo = rowId;

                        var cln = value[0].lastChild.cellIndex;
                        item.IsAdjust_mre = value[0].childNodes[cln - 1].childNodes[0].checked;
                        item.IsPaid_mre = value[0].childNodes[cln].childNodes[0].checked;
                        if (item.IsAdjust_mre) { AdjBills.push(item); }
                    }
                });


                $.ajax({
                    url: '@Url.Action("SaveCheRec", "ChequeReceipts")',
                    contentType: "application/json;charset=utf-8",
                    data: JSON.stringify({ CheRec: loadInfo, AdjBills: AdjBills }),
                    type: 'POST',
                    dataType: 'json',
                    success: function (datas) {
                        if (datas == 1) {
                            $("#btnSave").prop("disabled", false);
                            swal({
                                title: "Ok",
                                text: "Save Successfully.",
                                type: "success"
                            }, function () {
                                clearItemForm();
                            });
                        }
                        else if (datas == "X") {
                            swal({
                                title: "Sorry",
                                text: "No Save Permission for this User!",
                                type: "warning"
                            });
                        }
                        else if (datas == "2") {
                            swal({
                                title: "Sorry",
                                text: "Receipt No already exist!",
                                type: "warning"
                            });
                        }
                        else if (datas == "3") {
                            swal({
                                title: "Sorry",
                                text: "Cheque status sequence not maintaining!",
                                type: "warning"
                            });
                        }
                        else if (datas == 0) {
                            swal(
                                'Sorry!',
                                'An error occurred during the Save!',
                                'warning'
                            );
                            $("#btnSave").prop("disabled", false);
                        }
                    }
                });
            });

            function validateOnSave(validOrder) {
                if (!validOrder.MRSL.trim().length) {
                    return "Receipt SL is required.";
                }
                if (!validOrder.ChqReceiptNo.trim().length) {
                    return "Receipt No is required.";
                }
                if (!validOrder.ChqReceiptDate.trim().length) {
                    return "Receipt Date is required.";
                }
                if (validOrder.SubCode == "") {
                    return "Receipt From is required";
                }
                if (validOrder.MRAgainst.trim() == "") {
                    return "Please Select MR Against.";
                }
                if (!validOrder.ChqNo.trim().length) {
                    return "Cheque No is required.";
                }
                if (!validOrder.ChqDate.trim().length) {
                    return "Cheque Date is required.";
                }
                if (!validOrder.BankCode.trim().length) {
                    return "Please Select Bank Name.";
                }
                if (!validOrder.BranchName.trim().length) {
                    return "Branch Name is required.";
                }
                if (!validOrder.Amount.trim().length) {
                    return "Amount is required.";
                }
                if (validOrder.ChqStatus == "Deposit" && $("#PostDated").prop("checked") == false) {
                    if (validOrder.DepositBank == "") {
                        return "Please Select Deposit Bank.";
                    }
                    if (!validOrder.DepositDate.trim().length) {
                        return "Deposit Date is required.";
                    }
                }
                if (validOrder.ChqStatus == "Encash") {
                    if (validOrder.DepositBank == "") {
                        return "Please Select Deposit Bank.";
                    }
                    if (!validOrder.DepositDate.trim().length) {
                        return "Deposit Date is required.";
                    }
                    if (!validOrder.EncashDate.trim().length) {
                        return "Encash Date is required.";
                    }
                }
                if (!validOrder.UpdateBy.trim().length) {
                    return "Please Select Update By.";
                }
                if (!validOrder.UpdateDate.trim().length) {
                    return "Update Date is required.";
                }
            }



            $("#ChqReceiptNo").on('keydown', function (e) {
                if (e.which == 13 || e.which == 9) {
                    $.ajax({
                        url: '@Url.Action("GetAllByReceiptNo", "ChequeReceipts")',
                        contentType: "application/json;charset=utf-8",
                        data: { ReceiptNo: $("#ChqReceiptNo").val() },
                        type: 'GET',
                        dataType: 'json',
                        success: function (datas) {
                            if (datas.chqRec.ChqReceiptNo == "undefined") {
                                alert("error")
                            }
                            else {
                                $("#ChqReceiptNo").prop("disabled", true);
                                $("#ChqReceiptId").val(datas.chqRec.ChqReceiptId);
                                $("#MRSL").val(datas.chqRec.MRSL);
                                $("#BranchCode").val(datas.chqRec.BranchCode);
                                if (moment(datas.chqRec.ChqReceiptDate).format('MM/DD/YYYY') != moment('01/01/1900').format('MM/DD/YYYY')) {
                                    $("#ChqReceiptDate").datepicker("setDate", DateInDMYformat(datas.chqRec.ChqReceiptDate));
                                }
                                $("#MRAgainst").val(datas.chqRec.MRAgainst).trigger('change.select2');
                                $("#SubCode").val(datas.chqRec.SubCode).trigger('change.select2');
                                $("#ChqNo").val(datas.chqRec.ChqNo);
                                $("#oldChqNo").val(datas.chqRec.ChqNo);
                                $("#BankCode").val(datas.chqRec.BankCode).trigger('change.select2');
                                if (moment(datas.chqRec.ChqDate).format('MM/DD/YYYY') != moment('01/01/1900').format('MM/DD/YYYY')) {
                                    $("#ChqDate").datepicker("setDate", DateInDMYformat(datas.chqRec.ChqDate));
                                }
                                $("#BranchName").val(datas.chqRec.BranchName);
                                $("#DepositBank").val(datas.chqRec.DepositBank).trigger('change.select2');
                                if (moment(datas.chqRec.DepositDate).format('MM/DD/YYYY') != moment('01/01/1900').format('MM/DD/YYYY')) {
                                    $("#DepositDate").datepicker("setDate", DateInDMYformat(datas.chqRec.DepositDate));
                                }
                                $("#Amount").val(datas.chqRec.Amount);
                                if (moment(datas.chqRec.EncashDate).format('MM/DD/YYYY') != moment('01/01/1900').format('MM/DD/YYYY')) {
                                    $("#EncashDate").datepicker("setDate", DateInDMYformat(datas.chqRec.EncashDate));

                                }
                                $("#ChqStatus").val(datas.chqRec.ChqStatus).trigger('change.select2');
                                $("#UpdateBy").val(datas.chqRec.UpdateBy).trigger('change.select2');
                                if (moment(datas.chqRec.UpdateDate).format('MM/DD/YYYY') != moment('01/01/1900').format('MM/DD/YYYY')) {
                                    $("#UpdateDate").datepicker("setDate", DateInDMYformat(datas.chqRec.UpdateDate));

                                }
                                $("#Reason").val(datas.Reason);
                                $("#Remarks").val(datas.chqRec.Remarks);
                                $("#VchrNo").val(datas.chqRec.VchrNo);
                                $("#pnlSuggPlaceDate").hide();
                                if (datas.chqRec.PostDated == true) {
                                    $("#pnlSuggPlaceDate").show();
                                    $("#PostDated").prop('checked', true)
                                }
                                if (datas.chqRec.GLPost == true) {
                                    $("#GLPost").prop('checked', true)
                                }
                                if (moment(datas.chqRec.SuggPlaceDate).format('MM/DD/YYYY') != moment('01/01/1900').format('MM/DD/YYYY')) {
                                    $("#SuggPlaceDate").datepicker("setDate", DateInDMYformat(datas.chqRec.SuggPlaceDate));
                                }
                                if (datas.chqRec.GLPost == true) {
                                    $('#pnGLPost').attr("class", "col-md-12");
                                }
                                if (datas.chqRec.ChqStatus == "Dishonour" || datas.chqRec.ChqStatus == "Return") {
                                    $('#pnlReason').attr("class", "col-md-12");
                                }
                                if (datas.chqRec.ChqStatus != "Receive") {
                                    $("#BranchCode").prop("disabled", true);
                                    $("#ChqReceiptNo").prop("disabled", true);
                                    $("#ChqReceiptDate").prop("disabled", true);
                                    $("#SubCode").prop("disabled", true);
                                    $("#MRAgainst").prop("disabled", true);
                                    $("#ChqNo").prop("disabled", true);
                                    $("#ChqDate").prop("disabled", true);
                                    $("#BankCode").prop("disabled", true);
                                    $("#BranchName").prop("disabled", true);
                                    $("#Amount").prop("disabled", true);
                                }
                                if (datas.chqRec.AdjWithBill == true) {
                                    isEdit = "ChqEdit";
                                    $("#AdjWithBill").prop("checked", true);
                                    $('#pnlDT').attr("class", "col-sm-12 col-md-12");
                                    LoadDT();
                                }
                                $("#JobNo").val(datas.chqRec.JobNo).trigger('change');
                                $('#update').attr("class", "btn btn-primary");
                                $("#btnSave").hide();
                            }
                        },
                        error: function () {
                            //swal("Sorry! This MR no does not exist.", "fail")
                            //$("#btnSave").hide();
                        }
                    });
                }
            });


            $(document).on("click", "#update", function () {
                setOrder();
                var validate = validateOnSave(loadInfo);
                if (validate != undefined) {
                    alert(validate);
                    return;
                }
                $.ajax({
                    url: '@Url.Action("UpdateCheRec", "ChequeReceipts")',
                    contentType: "application/json;charset=utf-8",
                    data: JSON.stringify({ CheRec: loadInfo }),
                    type: 'POST',
                    dataType: 'json',
                    success: function (datas) {
                        if (datas == 1) {
                            swal({
                                title: "Ok",
                                text: "Update Successfully.",
                                type: "success"
                            }, function () {
                                clearItemForm();
                                $("#btnSave").prop("enable", true);

                            });
                        }
                        else if (datas == "U") {
                            swal({
                                title: "Sorry",
                                text: "No Update Permission for this User!",
                                type: "warning"
                            });
                        }
                        else if (datas == 0) {
                            swal(
                                'Sorry!',
                                'An error occurred during the update!',
                                'warning'
                            );
                            $("#update").prop("disabled", false);
                        }
                        else if (datas == "3") {
                            swal({
                                title: "Sorry",
                                text: "Cheque status sequence not maintaining!",
                                type: "warning"
                            });
                        }
                        else if (datas == 2) {
                            swal(
                                'Sorry!',
                                'This MR already posted!',
                                'warning'
                            );
                            $("#update").prop("disabled", false);
                        }
                    }
                });
            });
            var isEdit = 0;
            function LoadDT() {
                //function GetSaleNo() {
                //    var SaleNo = "000001"//$("#SaleNo").val();
                //    return SaleNo;
                //}
                $('#ChqMoneyRecptDT').dataTable({
                    "scrollY": 200,
                    "scrollX": true,
                    "destroy": true,
                    "crossDomain": true,
                    //"ajax": "../Sales/GetDatatableOnly?SaleNo=" + SaleNo,
                    "ajax": {
                        "url": "../CashMoneyReceipt/GetAdjBills",
                        "type": "GET",
                        "datatype": "json",
                        "data": { CustCode: $("#SubCode").val(), MRAgainst: $("#MRAgainst option:selected").val(), Amount: $("#Amount").val(), isEdit: isEdit }
                        //"data": function (d) {
                        //    d.CustCode = $("#CustCode").val();//GetSaleNo();
                        //    d.MRAgainst = $("#MRAgainst").text();
                        //    d.Amount = $("#Amount").val();
                        //}
                    },

                    "columns": [
                               { "data": null, "bSortable": false },
                               { "data": "SaleNo" },
                               {
                                   "data": "SaleDate", "type": "date ",
                                   "render": function (value) {
                                       if (value === null) return "";

                                       var pattern = /Date\(([^)]+)\)/;
                                       var results = pattern.exec(value);
                                       var dt = new Date(parseFloat(results[1]));

                                       return dt.getDate() + "/" + (dt.getMonth() + 1) + "/" + dt.getFullYear();
                                   }
                               },
                               { "data": "BillAmount" },
                               {

                                   "data": { IsPaid: "IsPaid", Billamt: "Billamt" },
                                   "render": function (data, type, full, meta) {
                                       return '<input type="checkbox" ' + (data.IsPaid == true && data.Billamt == 0 ? ' checked="checked"' : '') + '>';
                                   }, "bSortable": false
                               },

                               {
                                   "data": "Paid",
                                   "render": function (data, type, full, meta) {
                                       return '<input type="checkbox" ' + (data == true ? ' checked="checked"' : '') + '>';
                                   }, "bSortable": false
                               }
                    ],
                    order: [0, 'asc'],
                    select: {
                        style: 'os'
                    },
                    "columnDefs": [
                                {
                                    "targets": 2,
                                    "className": "text-center",
                                },
                                {
                                    "targets": 3,
                                    "className": "text-right",
                                }], fixedColumns: true,

                    "fnCreatedRow": function (row, data, index) {
                        $('td', row).eq(0).html(index + 1);
                    }
                });
            }


            $(document).on("click", "#btnClear", function () {
                clearItemForm();
            });

            $(document).on("change", "#SubCode, #MRAgainst", function () {
                $("#AdjWithBill").prop("checked", false);
                $('#pnlDT').attr("class", "col-sm-12 col-md-12 hidden");
            });

            function clearItemForm() {
                isEdit = "";
                $("#PostDated").prop("checked", false);
                $("#GLPost").prop("checked", false);
                $("#AdjWithBill").prop("checked", false);
                $('#pnlDT').attr("class", "col-sm-12 col-md-12 hidden");
                $("#ChqReceiptNo").val("");
                $("#ChqReceiptId").val("");
                $("#BranchCode").val($('#BranchCode option:first-child').val());
                $("#ChqReceiptDate").val("@DateTime.Today.ToShortDateString()");
                $("#MRAgainst").val("").trigger('change.select2');
                $("#SubCode").val($('#SubCode option:first-child').val()).trigger('change.select2');
                $("#ChqNo").val("");
                $("#oldChqNo").val("");
                $("#BankCode").val("").trigger('change.select2');
                $("#ChqDate").val("@DateTime.Today.ToShortDateString()");
                $("#BranchName").val("");
                $("#DepositBank").val("").trigger('change.select2');
                $("#DepositDate").val("@DateTime.Today.ToShortDateString()");
                $("#Amount").val("");
                $("#EncashDate").val("");
                $("#JobNo").val($('#JobNo option:first-child').val()).trigger('change.select2');
                $("#Remarks").val("");
                $("#Reason").val("");
                $("#SuggPlaceDate").val("@DateTime.Today.ToShortDateString()");
                $("#pnlSuggPlaceDate").hide();
                $("#ChqStatus").val($('#ChqStatus option:first-child').val()).trigger('change.select2');
                $("#UpdateBy").val($('#UpdateBy option:first-child').val()).trigger('change.select2');
                $("#UpdateDate").val("@DateTime.Today.ToShortDateString()");
                $('#pnGLPost').attr("class", "col-md-12 hidden");
                $('#pnlReason').attr("class", "col-md-12 hidden");
                $("label[for='lblEncashDate']").text("Encash Date");

                $("#BranchCode").prop("disabled", false);
                $("#ChqReceiptNo").prop("disabled", false);
                $("#ChqReceiptDate").prop("disabled", false);
                $("#SubCode").prop("disabled", false);
                $("#MRAgainst").prop("disabled", false);
                $("#ChqNo").prop("disabled", false);
                $("#ChqDate").prop("disabled", false);
                $("#BankCode").prop("disabled", false);
                $("#BranchName").prop("disabled", false);
                $("#Amount").prop("disabled", false);

                $.ajax({
                    url: '@Url.Action("GetReceiptNo", "ChequeReceipts")',
                    contentType: "application/json;charset=utf-8",
                    data: { branchCode: $("#BranchCode").val() },
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {
                        $("#MRSL").val(datas);
                    }
                });

                $.ajax({
                    url: '@Url.Action("GetNewVoucherNo", "CashReceipt")',
                    contentType: "application/json;charset=utf-8",
                    data: { VType: 'BR' },
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {
                        $("#VchrNo").val(datas);
                    }
                });

                $.ajax({
                    url: '@Url.Action("GetGlPCountN", "ChequeReceipts")',
                    contentType: "application/json;charset=utf-8",
                    data: { VType: 'BR' },
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {
                        $("#CountNo").html("(" + datas + ")");
                    }
                })

                $('#update').attr("class", "btn btn-primary hidden");
                $("#btnSave").show();
            }

            //For GLEntries
            $("#GLEntries").click(function () {
                //Get the id of the selected item in dropdown
                var SaleDate = moment($('#ChqReceiptDate').val(), 'DD/MM/YYYY').format('MM/DD/YYYY').toString();

                var id = SaleDate + '&pageType=BOR';
                //Replace the predifined QueryString param "xxx" with the "id"
                this.href = this.href.replace("blankDate", id);
            });


            $("#glPro").click(function () {
                //Get the id of the selected item in dropdown
                var id = 'BOR';

                //Replace the predifined QueryString param "xxx" with the "id"
                this.href = this.href.replace("blankDate", id);
            });

        });



    </script>
}


