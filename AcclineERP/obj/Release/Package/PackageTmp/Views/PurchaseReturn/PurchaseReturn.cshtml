@model App.Domain.ViewModel.ReturnVM
@{
    ViewBag.Title = "PurchaseReturn";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/App_Themes/Theme1/plugins/datatables/jquery.dataTables.min.css" rel="stylesheet" type="text/css" />
<link href="~/App_Themes/Theme1/plugins/bootstrap-daterangepicker/daterangepicker.css" rel="stylesheet">
<link href="~/App_Themes/Theme1/plugins/datatables/jquery.dataTables.min.css" rel="stylesheet" type="text/css" />
<link href="~/App_Themes/Theme1/plugins/select2/select2.css" rel="stylesheet" type="text/css" />
<link href="~/Css/FormDesign.css" rel="stylesheet" />

<style>
    table.dataTable.select tbody tr,
    table.dataTable thead th:first-child {
        cursor: pointer;
        text-align: center;
    }

    .dataTables_scrollBody > table > thead > tr > th[class*="sort"]::after {
        display: none;
    }

    .form-control {
        border: 1px solid #00ffff;
    }
      

    .required:after {
        content: " *";
        font-weight: bold;
        color: red;
    }

    fieldset {
        border: solid 1px #b9b4b4 !important;
        padding: 5px 0px 5px 0px;
        margin: 5px 0px 5px 0px;
        border-bottom: none;
        width: inherit;
    }

    a#GLProvition {
        color: darkblue;
    }

    a#GLEntries {
        color: darkblue;
    }

    legend {
        width: auto !important;
        border: none;
        font-size: 14px;
    }

    input#InstalAmt, input#TotalAmt, input#RecvAmt, input#ReceivableAmt {
        text-align: right;
    }
</style>
@using (Html.BeginForm())
{
    <div class="row">
        <div class="col-md-11">
            <div class="panel panel-color panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title">
                        <text style="text-align:left !important; text-decoration: none;">Purchase Return (Debit Note)</text>
                        <text id="@Html.IdFor(x => x.BranchCode)" style="text-align:right !important; text-decoration: none; font-weight:bold; color:antiquewhite; font-size:medium; margin-left:560px">@ViewBag.branchCode</text>
                    </h3>
                </div>
                <div class="panel-body">
                    <div class="input-group form-group col-md-12">
                        <div class="col-md-4" style="text-align:center">
                            <label class="control-label" target="_blank">
                                @Html.ActionLink(
                            "Purchase Return Voucher waiting for Posting",
                            "GetJournalVoucher",
                            "PurchaseReturn",
                            new { Date = "blankDate" },
                            new { id = "GLProvition", }
                            )
                            </label>
                            <label id="lblgl">(@ViewBag.GLProvition)</label>
                        </div>
                        <div class="col-md-3">
                            <label class="control-label" target="_blank">
                                @Html.ActionLink(
                            "List of Purchase Return Voucher",
                            "GetGLEntries",
                            "PurchaseReturn",
                            new { Date = "blankDate" },
                            new { id = "GLEntries", }
                            )
                            </label>
                            <label id="lblglE">(@ViewBag.GLEntries)</label>
                        </div>
                    </div>
                    <div class="col-md-12">

                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label class="col-md-4 required" for="AdjType">Location</label>
                                <div class="form-group col-md-8">
                                    @Html.DropDownListFor(x => x.LocCode, null, "--- Select ---", new { @class = "form-control select2", required = "required" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                @if (ViewBag.MaintJob == true)
                                {
                                    <div class="col-md-10">
                                        <label class="col-md-3">Job No</label>
                                        <div class="col-md-9 input-group form-group">
                                            @Html.DropDownListFor(x => x.JobNo, null, "---- Select ----", new { @class = "form-control select2", @Value = ViewBag.JobNo })
                                        </div>
                                    </div>
                                    <div class="col-md-2">
                                        <input type="button" class="btn" value="Add Job" id="btnJob" />
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label class="col-md-4 required" for="AdjNo">Return No</label>
                                <div class="form-group col-md-8">
                                    @Html.TextBoxFor(x => x.PurRetNo, new { @class = "form-control", required = "required", @Value = ViewBag.PurRetNo })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <label class="col-md-4 required">Return Date</label>
                                <div class="input-group form-group col-md-8">
                                    <input type="text" class="form-control datePage" id="@Html.IdFor(x => x.PurRetDate)" value="@DateTime.Today.ToShortDateString()">
                                    <span class="input-group-addon bg-primary b-0 text-white"><i class="ion-calendar"></i></span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label class="col-md-4 required" for="AdjType">Supplier</label>
                                <div class="form-group col-md-8">
                                    @Html.DropDownListFor(x => x.CustCode, null, "--- Select ---", new { @class = "form-control select2", required = "required" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <label class="col-md-4">Voucher No</label>
                                <div class="col-md-6" style="padding-left:1px;">
                                    <input class="form-control" id="VchrNo" name="VchrNo" type="text">
                                    <span class="field-validation-valid" data-valmsg-for="VchrNo" data-valmsg-replace="true"></span>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label class="col-md-4 required" for="AdjNo">Challan No</label>
                                <div class="form-group col-md-8">
                                    @Html.TextBoxFor(x => x.ChallanNo, new { @class = "form-control", required = "required" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <label class="col-md-4">Challan Date</label>
                                <div class="input-group form-group col-md-8">
                                    <input type="text" class="form-control datePage" id="@Html.IdFor(x => x.ChallanDate)">
                                    <span class="input-group-addon bg-primary b-0 text-white"><i class="ion-calendar"></i></span>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-12">
                            <div class="col-md-6">
                                <label class="col-md-4" for="AdjNo">Purchase No</label>
                                <div class="form-group col-md-8">
                                    @Html.TextBoxFor(x => x.PurNo, new { @class = "form-control", required = "required" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <label class="col-md-4">Purchase Date</label>
                                <div class="input-group form-group col-md-8">
                                    <input type="text" class="form-control datePage" id="@Html.IdFor(x => x.PurDate)">
                                    <span class="input-group-addon bg-primary b-0 text-white"><i class="ion-calendar"></i></span>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-12">
                            <fieldset>
                                <legend style="background-color:#c7c7c7"></legend>
                                <div class="col-md-6" style="padding-left:0px !important">
                                    @*<div class="col-md-12">
                                            <label class="col-md-4" for="ItemType">ItemType</label>
                                            <div class="form-group col-md-8">
                                                @Html.DropDownListFor(x => x.ItemType, null, "--- Select ---", new { @class = "form-control select2", required = "required" })
                                            </div>
                                        </div>*@
                                    <div class="col-md-12">
                                        <label class="col-md-4 required" for="AdjType">Item</label>
                                        <div class="form-group col-md-8">
                                            @Html.DropDownListFor(x => x.ItemCode, null, new { @class = "form-control select2", required = "required" })
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <label class="col-md-4">Description</label>
                                        <div class="form-group col-md-8">
                                            @Html.TextBoxFor(x => x.Description, new { @class = "form-control col-md-8 select2", required = "required" })
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="col-md-6" style="padding-left:initial">
                                            <label class="col-md-4 required">Quantity</label>
                                            <div class="input-group form-group col-md-8">
                                                @Html.TextBoxFor(x => x.Qty, new { @class = "form-control col-md-6 select2", required = "required" })
                                                <input type="hidden" id="currQty" />
                                            </div>
                                        </div>
                                        <div class="col-md-6" style="padding-left:initial">
                                            <label class="col-md-4 required">Unit Price</label>
                                            <div class="input-group form-group col-md-8">
                                                @Html.TextBoxFor(x => x.UnitPrice, new { @class = "form-control col-md-6 select2", required = "required" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12">

                                        <div class="col-md-6 hidden" style="padding-left:initial">
                                            <label class="col-md-4">Lot No</label>
                                            <div class="input-group form-group col-md-8">
                                                @Html.TextBoxFor(x => x.LotNo, new { @class = "form-control col-md-7 select2", required = "required" })
                                            </div>
                                        </div>
                                        <div class="col-md-2" style="padding-right:initial; float:right">
                                            <input type="button" class="btn btn-primary" value="Add" id="btnAdd" />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 col-md-6">
                                    <div class="row col-sm-12 col-md-12" style="border:1px solid; border-color:#adcceb; width:100%">
                                        <div class="row">
                                            <div class="col-sm-12 col-md-12" style="padding:1px 18px 1px 18px">
                                                <br />
                                                <table class="table table-bordered table-responsive" id="Add-datatable" style="width:100%">
                                                    <thead>
                                                        <tr>
                                                            <th width="5%">SL</th>
                                                            <th width="20%">Purchase&nbsp;No</th>
                                                            <th width="40%">Item</th>
                                                            <th width="10%">Qty</th>
                                                            <th width="10%">Action</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="PurReturnTbodyId"></tbody>

                                                </table>
                                                <br />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                        </div>

                        <div class="col-md-6">
                            <div class="col-md-12">
                                <label class="col-md-4" for="AdjNo">Returnable Amount</label>
                                <div class="input-group form-group col-md-8">
                                    @Html.TextBoxFor(x => x.RetableAmt, new { @class = "form-control", required = "required" })
                                </div>
                            </div>

                            <div class="col-md-12">
                                <label class="col-md-4 required">Approve By</label>
                                <div class="input-group form-group col-md-8">
                                    @Html.DropDownListFor(x => x.ApprBy, null, "--- Select ---", new { @class = "form-control select2", required = "required" })
                                </div>
                            </div>
                            <div class="col-md-12">
                                <label class="col-md-4 required">Reason Of Return</label>
                                <div class="input-group form-group col-md-8">
                                    @Html.DropDownListFor(x => x.Reason, null, new { @class = "form-control select2", @Value = ViewBag.Reason })
                                </div>
                            </div>

                        </div>
                        <div class="col-md-6">
                            <div class="col-md-12">
                                <label class="col-md-4 required" for="RetAmt">Return Amount</label>
                                <div class="input-group form-group col-md-8">
                                    @Html.TextBoxFor(x => x.RetAmt, new { @class = "form-control", required = "required" })
                                </div>
                            </div>
                            <div class="col-md-12">
                                <label class="col-md-4 required">Approve Date</label>
                                <div class="input-group form-group col-md-8">
                                    <input type="text" class="form-control datePage" id="@Html.IdFor(x => x.ApprDate)" value="@DateTime.Today.ToShortDateString()">
                                    <span class="input-group-addon bg-primary b-0 text-white"><i class="ion-calendar"></i></span>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <label class="col-md-4" for="AdjNo">Remarks</label>
                                <div class="input-group form-group col-md-8">
                                    @Html.TextBoxFor(x => x.Remarks, new { @class = "form-control", required = "required" })
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-8" style=" text-align:center;overflow:hidden; margin-top:20px;">
                            <input type="button" value="Save" class="btn btn-primary" id="btnSave" style="width:100px;" />
                            <input type="button" value="Update" class="btn btn-primary hidden" id="btnUpdate" style="width:100px;" />
                            <input type="button" value="Clear" class="btn btn-primary" id="btnClear" style="width:100px;" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" id="JobModal" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-md">
            <div class="modal-content">
                <div class="row">
                    <div class="col-md-12">
                        <div class="panel panel-color panel-primary">
                            <div class="panel-heading">
                                <h3 class="panel-title">Job Information</h3>

                            </div>
                            <div class="panel-body">
                                <div class="clearfix">
                                </div>
                                <div class="col-md-12">
                                    <label class="col-md-3">Job No</label>
                                    <div class="input-group form-group col-md-7">
                                        <input type="text" class="form-control" id="nJobNo" name="nJobNo" />
                                    </div>
                                </div>
                                <div class="col-md-10">
                                    <div>
                                        <div class="pull-right">
                                            <input type="button" id="btnJobOk" value="Save" class="btn btn-primary" />
                                            <input type="button" id="closeJob" value="Close" class="btn btn-primary" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
}
@section scripts{
    <script src="~/App_Themes/Theme1/plugins/select2/select2.min.js" type="text/javascript"></script>
    <script src="~/App_Themes/Theme1/plugins/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/dataTables.bootstrap.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/dataTables.buttons.min.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/buttons.bootstrap.min.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/pdfmake.min.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/vfs_fonts.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/buttons.html5.min.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/buttons.print.min.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/dataTables.fixedHeader.min.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/dataTables.keyTable.min.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/dataTables.responsive.min.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/responsive.bootstrap.min.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/dataTables.scroller.min.js"></script>
    <script type="text/javascript" src="../App_Themes/Theme1/plugins/parsleyjs/dist/parsley.min.js"></script>
    <script src="../App_Themes/Theme1/blue/assets/pages/datatables.init.js"></script>


    <script>
    $(document).ready(function () {

        var ispType = '@ViewBag.errMsg';
        if (ispType != '') {
            ispType = '@ViewBag.errMsg';
            }
            if (ispType == "VWP") {
                alert("No Voucher waiting for posting Permission for this User");
            } else if (ispType == "VL") {
                alert("No List Of Purchase Return vouchers Permission for this User");
            }

            function select2Focus() {
                var select2 = $(this).data('select2');
                setTimeout(function () {
                    if (!select2.opened()) {
                        select2.open();
                    }
                }, 0);
            }
            var isEdit = 0;
            $("input:text:visible:first").focus();
            $("#LocCode").select2().one('select2-focus', select2Focus).on("select2-blur", function () { $(this).one('select2-focus', select2Focus) });
            $("#CustCode").select2().one('select2-focus', select2Focus).on("select2-blur", function () { $(this).one('select2-focus', select2Focus) });
            $("#ItemType").select2().one('select2-focus', select2Focus).on("select2-blur", function () { $(this).one('select2-focus', select2Focus) });
            $("#ItemCode").select2().one('select2-focus', select2Focus).on("select2-blur", function () { $(this).one('select2-focus', select2Focus) });
            $("#ApprBy").select2().one('select2-focus', select2Focus).on("select2-blur", function () { $(this).one('select2-focus', select2Focus) });
            $("#JobNo").select2().one('select2-focus', select2Focus).on("select2-blur", function () { $(this).one('select2-focus', select2Focus) });
            $("#Reason").select2().one('select2-focus', select2Focus).on("select2-blur", function () { $(this).one('select2-focus', select2Focus) });

            $("#InstalAmt").prop("disabled", true);
            $("#TotalAmt").prop("disabled", true);
            $("#RecvAmt").prop("disabled", true);
            $("#RetableAmt").prop("disabled", true);
            $("#InstalAmt").val(0);
            $("#TotalAmt").val(0);
            $("#RecvAmt").val(0);
            $("#ReceivableAmt").val(0);
            $("#ChallanDate").prop("disabled", true);
            $("#PurDate").prop("disabled", true);

            var table = $('#Add-datatable').dataTable({
                "scrollY": 200,
                "scrollX": true,
                "paging": false,
                "ordering": false,
                "info": false,
                "searching": false
            });

            //For GLEntries
            $("#GLEntries").click(function () {
                //Get the id of the selected item in dropdown
                var IssueDate = moment($('#PurRetDate').val(), 'DD/MM/YYYY').format('MM/DD/YYYY').toString();

                var id = IssueDate + '&pageType=PR';

                //Replace the predifined QueryString param "xxx" with the "id"
                this.href = this.href.replace("blankDate", id);
            });
            //For GLprovition
            $("#GLProvition").click(function () {
                //Get the id of the selected item in dropdown
                var IssueDate = "";

                var id = IssueDate + '&pageType=PR';

                //Replace the predifined QueryString param "xxx" with the "id"
                this.href = this.href.replace("blankDate", id);
            });

            $.ajax({
                url: '@Url.Action("GetVoucherNo", "PurchaseReturn")',
            contentType: "application/json;charset=utf-8",
            data: { VType: 'PR' },
            type: 'GET',
            dataType: 'json',
            success: function (datas) {
                $("#VchrNo").val(datas);
            }
        });

        $("#ChallanNo").on('keydown', function (e) {
            if (e.which == 13 || e.which == 9) {
                $.ajax({
                    url: '@Url.Action("GetDataByChallanNo", "PurchaseReturn")',
                    contentType: "application/json;charset=utf-8",
                    data: { ChallanNo: $("#ChallanNo").val() },
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {
                        if (datas.Purchase != null) {
                            if (datas.PurDetail != null) {
                                $.each(datas.PurDetail, function (index, value) {
                                    $('#ItemCode').append($('<option>',
                                        {
                                            value: value.Value,
                                            text: value.Text
                                        }));
                                });
                            }
                            $("#PurNo").prop("disabled", true);
                            $("#PurNo").val(datas.Purchase.PurNo);
                            $("#CustCode").val(datas.Purchase.SupCode).trigger('change');
                            if (moment(datas.Purchase.PurDate).format('MM/DD/YYYY') != moment('01/01/1900').format('MM/DD/YYYY')) {
                                $("#PurDate").datepicker("setDate", DateInDMYformat(datas.Purchase.PurDate));
                            }
                            if (moment(datas.Purchase.B_C_Date).format('MM/DD/YYYY') != moment('01/01/1900').format('MM/DD/YYYY')) {
                                $("#ChallanDate").datepicker("setDate", DateInDMYformat(datas.Purchase.B_C_Date));
                            }
                        }
                    },
                    error: function () {
                        swal("Sorry!! This Challan no does not exist.", "fail")
                    }
                });
            }
        });


        ///for Qty, UPrice load by ItemCode.......
        $(document).on("change", "#ItemCode", function () {
            $.ajax({
                url: '@Url.Action("GetItemByQtyPrice", "PurchaseReturn")',
                contentType: "application/json;charset=utf-8",
                data: {
                    ItemCode: $("#ItemCode").val(), ChallanNo: $("#ChallanNo").val()
                },
                type: 'GET',
                dataType: 'json',
                success: function (datas) {
                    if (datas != null) {
                        $("#Qty").val(datas.PurQty);
                        $("#currQty").val(datas.PurQty);
                        $("#UnitPrice").val(datas.UPrice);
                    }
                }
            });
        });


        //*******************************For DT Add ****************************

        var orders = [];
        var delQtyOrder = [];
        $('#btnAdd').click(function () {
            if ($("#ItemCode").val() == "") {
                alert("Item is required.");
                return;
            }
            if ($("#currQty").val() < $("#Qty").val() || $("#Qty").val() < 0) {
                alert("Quantity is more then Sale Quantity.");
                return;
            }
            addOnList();
            $("tbody#PurReturnTbodyId tr:even").css({
                "background-color": "#e6e8e8"
            });
            clearItemInfo();
        });
        function clearItemInfo() {
            $("#ItemCode").val($('#ItemCode option:first-child').val()).trigger('change.select2');
            $("#UnitPrice").val("0");
            $("#Qty").val("0");
            $("#Description").val("");
        }



        function addOnList() {
            var newAddList = [];
            var newAddListSl = 0;

            var ItemCode = $("#ItemCode option:selected").val();
            var ReturnQty = $("#Qty").val();
            var UnitPrice = $("#UnitPrice").val();
            var PurNo = $("#PurNo").val();
            var Description = $("#Description").val();
            var LotNo = "01";
            if ($("#LotNo").val() != "") {
                LotNo = $("#LotNo").val();
            }
            var item = {
                ItemCode: ItemCode, ReturnQty: ReturnQty, PurNo: PurNo, Sl: 0,
                UnitPrice: UnitPrice, Description: Description, LotNo: LotNo
            }

            item.Sl = orders.length + 1;
            orders.push(item);
            addOnTable();
        }

        function addOnTable() {
            $('#PurReturnTbodyId').empty();
            var sl = 0;
            var RetableAmt = 0;
            $.each(orders, function (index, data) {
                sl = sl + 1;
                data.Sl = sl;
                $("#PurReturnTbodyId").append("<tr><td>" + sl + "</td><td>"
                                                   + data.PurNo + "</td><td>"
                                                   + data.ItemCode + "</td><td>"
                                                   + data.ReturnQty + "</td><td>"
                                                  + '<a href="#" class="on-default remove-row deleteSup" data-id="' + sl + '" id="delete" value="' + sl + '"><i class="glyphicon glyphicon-trash"></i></a>' + "</td></tr>");
                RetableAmt += data.ReturnQty * data.UnitPrice;
            });
            $("#RetableAmt").val(RetableAmt);
        }

        $(document).on('click', '#delete', function () {
            var id = $(this).attr("value");

            swal({
                title: "Are you sure?",
                text: "You will not be able to recover this order data!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: true
            },
             function () {
                 deleteRow(id);
                 addOnTable();
                 swal("Deleted!", "Your imaginary file has been deleted.", "success");

             });
        });
        function deleteRow(sl) {
            var newOrder = [];
            var newSl = 0;

            $.each(orders, function (index, data) {

                if (data.Sl != sl) {
                    newSl++;
                    data.Sl = newSl;
                    data.Id = 0;
                    newOrder.push(data);
                }
            });
            orders = new Array();
            orders = newOrder;

        }


        $("#PurRetNo").on('keydown', function (e) {
            if (e.which == 13 || e.which == 9) {
                $.ajax({
                    url: '@Url.Action("GetAllByPurRetNo", "PurchaseReturn")',
                    contentType: "application/json;charset=utf-8",
                    data: { PurRetNo: $("#PurRetNo").val() },
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {

                        if (datas.PurRetM != null) {
                            $("#PurRetNo").prop("disabled", true);
                            isEdit = 1;
                            if (moment(datas.PurRetM.PurRetDate).format('MM/DD/YYYY') != moment('01/01/1900').format('MM/DD/YYYY')) {
                                $("#PurRetDate").datepicker("setDate", DateInDMYformat(datas.PurRetM.PurRetDate));
                            }
                            $("#CustCode").val(datas.PurRetM.CustCode).trigger('change.select2');
                            $("#JobNo").val(datas.PurRetM.JobNo).trigger('change.select2');
                            $("#LocCode").val(datas.PurRetM.LocNo).trigger('change.select2');
                            $("#Reason").val(datas.PurRetM.Reason).trigger('change.select2');
                            $("#ChallanNo").val(datas.PurRetM.ChallanNo);
                            $("#PurNo").val(datas.PurRetM.PurNo);
                            $("#RetableAmt").val(datas.PurRetM.RetableAmt);
                            $("#RetAmt").val(datas.PurRetM.RetAmt);
                            $("#ApprBy").val(datas.PurRetM.ApprBy).trigger('change.select2');
                            if (moment(datas.PurRetM.ApprDate).format('MM/DD/YYYY') != moment('01/01/1900').format('MM/DD/YYYY')) {
                                $("#ApprDate").datepicker("setDate", DateInDMYformat(datas.PurRetM.ApprDate));
                            }
                            $("#Remarks").val(datas.PurRetM.Remarks);
                            $("#VchrNo").val(datas.PurRetM.VchrNo);
                            orders = [];
                            if (datas.PurRetD != null) {
                                var j = 0;
                                $.each(datas.PurRetD, function (index, data) {
                                    j++;
                                    data.Sl = j;
                                    data.PurNo = datas.PurRetM.PurNo;
                                    //data.ItemCode = data.itemCode;
                                    orders.push(data);

                                });
                                addOnTable();
                            }                           

                            $('#btnUpdate').attr("class", "btn btn-primary");
                        }
                        else {

                        }

                    },
                    error: function () {
                        swal("Sorry!! This Voucher no does not exist.", "fail")
                    }
                });
            }
        });


        var loadInfo = {
            PurRetNo: "",
            PurRetDate: "",
            PurNo: "",
            CustCode: "",
            LocNo: "",
            Remarks: "",
            ApprBy: "",
            ApprDate: "",
            JobNo: "",
            RetAmt: "",
            RetableAmt: "",
            ChallanNo: "",
            Reason: "",
            VchrNo: ""
        };
        function setOrder() {
            loadInfo.PurRetNo = $("#PurRetNo").val();
            loadInfo.PurRetDate = $("#PurRetDate").val();
            loadInfo.PurNo = $("#PurNo").val();
            loadInfo.CustCode = $("#CustCode").val();
            loadInfo.LocNo = $("#LocCode").val();
            loadInfo.RetableAmt = $("#RetableAmt").val();
            loadInfo.Remarks = $("#Remarks").val();
            loadInfo.ApprBy = $("#ApprBy").val();
            loadInfo.ApprDate = $("#ApprDate").val();
            loadInfo.JobNo = $("#JobNo").val();
            loadInfo.Reason = $("#Reason").val();
            loadInfo.RetAmt = $("#RetAmt").val();
            loadInfo.ChallanNo = $("#ChallanNo").val();
            loadInfo.VchrNo = $("#VchrNo").val();
        }

        $(document).on("click", "#btnClear", function () {
            clearPurRet();
        });
        function clearPurRet() {
            clearItemInfo();
            $("#PurRetNo").prop("disabled", false);
            $("#CustCode").val($('#CustCode option:first-child').val()).trigger('change.select2');
            $("#LocCode").val($('#LocCode option:first-child').val()).trigger('change.select2');
            $("#ApprBy").val($('#ApprBy option:first-child').val()).trigger('change.select2');
            $("#JobNo").val($('#JobNo option:first-child').val()).trigger('change.select2');
            $("#Reason").val($('#Reason option:first-child').val()).trigger('change.select2');
            $("#PurRetDate").val("@DateTime.Today.ToShortDateString()");
            $("#ChallanNo").val("");
            $("#PurNo").val("");
            $("#Remarks").val("");
            $("#RetAmt").val("");
            $("#Remarks").val("");
            $("#RetableAmt").val("");
            $("#ChallanDate").val("");
            $("#PurDate").val("");
            $("#btnSave").show();
            $('#btnUpdate').attr("class", "btn btn-primary hidden");
            isEdit == 0;

            table.fnClearTable();
            orders = new Array();
            $.ajax({
                url: '@Url.Action("GeneratePurRetNo", "PurchaseReturn")',
                contentType: "application/json;charset=utf-8",
                type: 'GET',
                dataType: 'json',
                success: function (datas) {
                    $("#PurRetNo").val(datas);
                }
            });

            $.ajax({
                url: '@Url.Action("GetVoucherNo", "PurchaseReturn")',
                contentType: "application/json;charset=utf-8",
                data: { VType: 'PR' },
                type: 'GET',
                dataType: 'json',
                success: function (datas) {
                    $("#VchrNo").val(datas);
                }
            });

            $.ajax({
                url: '@Url.Action("GetGlPCountN", "PurchaseReturn")',
                contentType: "application/json;charset=utf-8",
                data: { VType: 'SR' },
                type: 'GET',
                dataType: 'json',
                success: function (datas) {
                    $("#lblgl").text('(' + datas + ')');
                }
            })

            $.ajax({
                url: '@Url.Action("GetGlECountN", "PurchaseReturn")',
                contentType: "application/json;charset=utf-8",
                data: { VType: 'SR', datetime: moment($('#PurRetDate').val(), 'DD/MM/YYYY').format('MM/DD/YYYY').toString() },
                type: 'GET',
                dataType: 'json',
                success: function (datas) {
                    $("#lblglE").text('(' + datas + ')');
                }
            })
        }
        ////For Save and Update
        $(document).on("click", "#btnSave, #btnUpdate", function () {
            setOrder();
            var validate = validateOnSave(loadInfo);
            if (validate != "") {
                alert(validate);
                return;
            }

            if (orders != 0) {
                $.ajax({
                    url: '@Url.Action("SaveUpdatePurRet", "PurchaseReturn")',
                    contentType: "application/json;charset=utf-8",
                    data: JSON.stringify({ PurRet: loadInfo, PurRetDetail: orders, IsSave: isEdit }),
                    type: 'POST',
                    dataType: 'json',
                    success: function (datas) {
                        if (datas.Msg == "1") {
                            swal({
                                title: "Ok",
                                text: "Successfully Saved!",
                                type: "success"
                            },
                            function () {                                
                                clearPurRet();
                            });
                            $("#btnSave").prop("disabled", false);
                            orders = [];
                        }
                        else if (datas.Msg == "2") {
                            swal({
                                title: "Ok",
                                text: "Successfully Updated!",
                                type: "success"
                            },
                            function () {
                                clearPurRet();
                            });
                            $("#btnSave").prop("disabled", false);
                            orders = [];
                        }
                        else if (datas == "U") {
                            swal({
                                title: "Sorry",
                                text: "No Update Permission for this User",
                                type: "warning"
                            });
                        }
                        else if (datas == "X") {
                            swal({
                                title: "Sorry",
                                text: "No Save Permission for this User",
                                type: "warning"
                            });
                        }
                        else {
                            swal(
                                'Sorry!',
                                datas,
                                'warning'
                            );
                            $("#btnSave").prop("disabled", false);
                        }
                    }
                });
            } else {
                swal(
                    'Sorry!',
                    'Please Add item in the Table.!!!',
                    'warning'
                    );
            }

        });


        function validateOnSave(validOrder) {
            if (validOrder.LocNo == "") {
                return "Location is required.";
            }
            if (validOrder.PurRetNo == "") {
                return "Return No is required.";
            }
            if (validOrder.PurRetDate == "") {
                return "Return Date is required.";
            }
            if (validOrder.CustCode == "") {
                return "Supplier is required.";
            }
            if (validOrder.ChallanNo == "") {
                return "Challan No is required.";
            }
            if (validOrder.RetableAmt < validOrder.RetAmt) {
                return "Return amount mismatch to Returnable amount.";
            }
            if (!validOrder.ApprBy.trim().length) {
                return "Approve By is Required.";
            }
            if (!validOrder.ApprDate.trim().length) {
                return "Approve Date is Required.";
            }
            if (validOrder.Reason.trim() == "0") {
                return "Reason is required.";
            }
            return "";

        }

        //***************************** For JobNo *******************************

        $(document).on("click", "#btnJob", function () {
            $("#JobModal").modal("show");
        });
        $(document).on("click", "#closeJob", function (e) {
            e.preventDefault();
            $('#JobModal').modal('hide');
        });

        $(document).on("click", "#btnJobOk", function (e) {
            if ($("#nJobNo").val() != "") {
                $.ajax({
                    url: '@Url.Action("LoadandSaveJob", "Sales")',
                    contentType: "application/json;charset=utf-8",
                    data: {
                        nJobNo: $("#nJobNo").val()
                    },
                    type: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        $('#JobNo').empty();
                        //data.insertBefore('<option>', { Value: "", text: "--- Select ---" });
                        $.each(data, function (index, value) {
                            $('#JobNo').append($('<option>',
                                {
                                    value: value.Value,
                                    text: value.Text
                                })).select2();
                        });
                        $('#JobModal').modal('hide');
                        $("#nJobNo").val("");
                    }
                });
            }
            else {
                alert("Job No is required.");
                return;
            }

        })

    });
    </script>
}

